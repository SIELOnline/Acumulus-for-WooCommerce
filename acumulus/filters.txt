Acumulus plugin filters
=======================

Warning
-------
These filters are experimental. Depending on feedback from actual usage, details
may change in future versions.

This file documents the filters that the Acumulus plugin defines. Currently, the
following filters are defined:
- acumulus_invoice_created
- acumulus_invoice_completed
- acumulus_invoice_sent

Acumulus Plugin API/Filter Reference/acumulus_invoice_created
=============================================================

Description
-----------
The "acumulus_invoice_created" filter is used to change the invoice that will be
sent to Acumulus. The Creator component of the Acumulus plugin has created the
raw invoice and is about to complete and send it to Acumulus. This filter allows
you to:
- Prevent sending the invoice to Acumulus.
- Change the raw invoice as will be passed through the Completor component and
  then be sent Acumulus.

Usage
-----
When the "acumulus_invoice_created" filter is called, it is passed 2 arguments:
- array $invoice:
  A keyed array containing the raw invoice that will be sent to Acumulus. The
  array structure is similar to the XML structure as defined on
  https://apidoc.sielsystems.nl/content/invoice-add, though at this stage, only
  the customer key will be present at the highest level. The line tag is
  represented as a numeric array of lines, even if if there is only 1 line.

  Some keys might be missing or NULL, if they are still not set after this
  filter has been applied, they will be filled in (not overwritten) by the
  Completor component of this plugin before the actual sending takes place.
  See \Siel\Acumulus\Invoice\Creator::getCustomer()
  See \Siel\Acumulus\Invoice\Creator::getInvoice()
  See \Siel\Acumulus\Invoice\Creator::getInvoiceLines()

  Some additional keys might be available.
  See \Siel\Acumulus\Invoice\Creator::getInvoice()
  See \Siel\Acumulus\Invoice\Creator::getInvoiceTotals()
  See \Siel\Acumulus\Invoice\Creator::getInvoiceLines()

- \Siel\Acumulus\Invoice\Source $source: the WooCommerce order or refund wrapped
  in a Source object. The Source class defines a.o. the following methods:
  Source::getType(): Returns the type of the wrapped source, a string containing
    one of the Source constants Source::Order or Source::CreditNote.
  Source::getSource(): Returns the wrapped source. If the type is Source::Order,
    this will return a WC_Order. If the type is Source::CreditNote, this will
    return a WC_Order_Refund. Note that both extend from WC_Abstract_Order.
  Source::getId(): Returns the (internal) id of the source (order or refund).

The filter should return the altered invoice or NULl if it wants to prevent
sending the invoice to Acumulus.


Acumulus Plugin API/Filter Reference/acumulus_invoice_completed
===============================================================

Description
-----------
The "acumulus_invoice_completed" filter is used to complete/correct the raw
invoice as created by the Creator component of this plugin and that will be sent
to Acumulus. The Creator component of the Acumulus plugin has created the
raw invoice and that has been completed by the Completor. This filter allows
you to:
- Prevent sending the invoice to Acumulus.
- Change the completed invoice as will be sent to Acumulus.

Usage
-----
When the "acumulus_invoice_completed" filter is called, it is passed 2
arguments:
- array $invoice: see filter acumulus_invoice_created.
- \Siel\Acumulus\Invoice\Source $source: see filter acumulus_invoice_created.

The filter should return the altered invoice or NULl if it wants to prevent
sending the invoice to Acumulus.

Typical usages for these filters allow to implement business logic specific to
your business, think of:
- Template, account number, or cost center selection based on order specifics.
- Adding descriptive info to the invoice or invoice lines based on custom order
  meta data.
- Correcting payment info based on payment plugins not supported by this plugin.

The difference between Created and Completed lies in:
- Tax handling: the vat type (reversed vat, EU vat, Dutch VAT)
- Tax rates: if tax rates are computed via a division, they might contain
  rounding errors after Creation. Based on actual VAT rates these should have
  been corrected after Completion.
- Splitting discount over multiple vat rates.

Example 1
---------
// Defines a filter that prevents sending 0-amount invoices (free products).
// @author Wouter D. Snel
use Siel\Acumulus\Invoice\Source;
add_filter('acumulus_invoice_created', 'acumulus_stop_null');

function acumulus_stop_null(array $invoice, Source $source) {
	if ($invoice['customer']['invoice']['meta-invoiceamountinc'] == 0) {
	  return NULL;
	}
	else {
	  return $invoice;
	}
}


Example 2
---------
use Siel\Acumulus\Invoice\ConfigInterface;
use Siel\Acumulus\Invoice\Source;
add_filter('acumulus_invoice_created', 'my_acumulus_invoice_created', 10, 2);

function my_acumulus_invoice_created(array $invoice, Source $source) {
  $is_paid = my_determine_payment_status($source);
  if ($is_paid) {
    $invoice['customer']['invoice']['paymentstatus'] = ConfigInterface::PaymentStatus_Paid;
    $paymentDate = $source->getType() === Source::Order
      ? source->getSource()->paid_date
      : source->getSource()->post->post_modified;
    $invoice['customer']['invoice']['paymentdate'] = substr($paymentDate, 0, strlen('2000-01-01'));
  }
  else {
    $invoice['customer']['invoice']['paymentstatus'] = ConfigInterface::PaymentStatus_Due;
    unset($invoice['customer']['invoice']['paymentdate']);
  }
  return $invoice;
}


Acumulus Plugin API/Filter Reference/acumulus_invoice_sent
==========================================================

Description
-----------
The "acumulus_invoice_sent" action is triggered when the invoice has been sent
to Acumulus. This is an action, not a filter, thus no return value is expected,
nor can you change any of the values passed in.

When the "acumulus_invoice_sent" action is called, it is passed 3 arguments:
- array $invoice The invoice that has been sent to Acumulus.
  see filter acumulus_invoice_created.
- \Siel\Acumulus\Invoice\Source $source: the wrapped WooCommerce order or refund
  object. See filter acumulus_invoice_created.
- array $result The result of the invoice add API service.

See https://apidoc.sielsystems.nl/content/invoice-add for the structure of the
$invoice and $result arrays.


Related
=======
N.A.


External Resources
==================
- https://apidoc.sielsystems.nl/content/invoice-add.
- https://apidoc.sielsystems.nl/content/warning-error-and-status-response-section-most-api-calls
